{
    "name": "clean-comic",
    "version": "0.1.0",
    "private": true,
    "proxy": "http://localhost:3001/",
    "dependencies": {
        "body-parser": "^1.17.2",
        "cheerio": "^1.0.0-rc.1",
        "cookie-parser": "^1.4.3",
        "cron": "^1.2.1",
        "debug": "~2.6.3",
        "dirty": "^1.1.0",
        "express": "~4.15.2",
        "image-downloader": "^3.2.2",
        "less-middleware": "^2.2.0",
        "mime-types": "latest",
        "moment": "^2.18.1",
        "morgan": "^1.8.2",
        "react": "^15.6.1",
        "react-dom": "^15.6.1",
        "react-router-dom": "^4.1.1",
        "request-promise-native": "^1.0.4",
        "sanitize-filename": "^1.6.1",
        "serve-favicon": "^2.4.3"
    },
    "comments": {
        "----node-dependencies---": "",
        "body-parser": "middleware to easily get body off a request",
        "cheerio": "jquery core library",
        "cookie-parser": "middleware to easily get cookies off a request",
        "cron": "library for scheduling cron jobs",
        "debug": "logger",
        "dirty": "object store database that uses plaintext files for storage",
        "express": "server framework",
        "image-downloader": "easy library to download an image using promises",
        "less-middleware": "middleware for compiling less css files on the fly",
        "mime-types": "self-explanatory",
        "moment": "date/time library",
        "morgan": "http request logger",
        "request-promise-native": "uses nodes request module but returns promises",
        "sanitize-filename": "self-explanatory",
        "serve-favicon": "middleware to use favicons",
        "----frontend-dependencies---": "",
        "react": "frontend framework",
        "react-dom": "used to attach react components to the dom",
        "react-router-dom": "dom bindings for react-router"
    },
    "devDependencies": {
        "react-scripts": "1.0.7"
    },
    "scripts": {
        "start-node": "node ./bin/www",
        "start": "react-scripts start",
        "build": "react-scripts build",
        "test": "react-scripts test --env=jsdom",
        "eject": "react-scripts eject"
    }
}
